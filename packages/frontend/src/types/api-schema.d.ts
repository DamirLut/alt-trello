/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/auth/vk': {
    get: operations['AuthController_authVk'];
  };
  '/api/auth/google': {
    get: operations['AuthController_authGoogle'];
  };
  '/api/auth/logout': {
    post: operations['AuthController_logout'];
  };
  '/api/user': {
    get: operations['UserController_getSelf'];
  };
  '/api/user/search': {
    get: operations['UserController_searchUser'];
  };
  '/api/utils': {
    get: operations['UtilsController_getOAuthList'];
  };
  '/api/utils/fetchUrl': {
    get: operations['UtilsController_fetchUrl'];
  };
  '/api/utils/uploadImage': {
    post: operations['UtilsController_uploadImage'];
  };
  '/api/utils/uploadFile': {
    post: operations['UtilsController_uploadFile'];
  };
  '/api/boards/new': {
    post: operations['BoardController_createBoard'];
  };
  '/api/boards/list': {
    get: operations['BoardController_getUserList'];
  };
  '/api/boards': {
    get: operations['BoardController_getBoardById'];
    delete: operations['BoardController_deleteBoard'];
  };
  '/api/boards/favorite': {
    post: operations['BoardController_toggleFavorite'];
  };
  '/api/boards/invite': {
    post: operations['BoardController_inviteMember'];
  };
  '/api/boards/exclude': {
    post: operations['BoardController_excludeMember'];
  };
  '/api/boards/settings/label': {
    patch: operations['BoardController_updateLabel'];
  };
  '/api/columns/new': {
    post: operations['ColumnController_newColumn'];
  };
  '/api/columns': {
    delete: operations['ColumnController_deleteColumn'];
    patch: operations['ColumnController_updateColumn'];
  };
  '/api/columns/move': {
    post: operations['ColumnController_moveColumn'];
  };
  '/api/cards/new': {
    post: operations['CardController_create'];
  };
  '/api/cards/list': {
    get: operations['CardController_getCards'];
  };
  '/api/cards': {
    get: operations['CardController_getCard'];
    put: operations['CardController_setContent'];
    delete: operations['CardController_deleteCard'];
    patch: operations['CardController_setTitle'];
  };
  '/api/cards/move': {
    patch: operations['CardController_moveCard'];
  };
  '/api/cards/cover': {
    put: operations['CardController_setCover'];
  };
  '/api/cards/members': {
    post: operations['CardController_setMember'];
  };
  '/api/cards/label': {
    post: operations['CardController_setLabel'];
  };
  '/api/comments': {
    get: operations['CommentController_getCards'];
    post: operations['CommentController_createCard'];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    UserEntity: {
      id: number;
      /** Format: date-time */
      lastActiveAt: string;
      username: string;
      avatar: string;
      email: string;
    };
    AuthMethodDTO: {
      /** @enum {string} */
      type: 'vk' | 'google';
      redirect_url: string;
    };
    AuthMethodsDTO: {
      items: components['schemas']['AuthMethodDTO'][];
    };
    CreateBoardDTO: {
      title: string;
      color: string;
      description: string;
    };
    BoardThemeSetting: {
      color: string;
    };
    BoardLabelSetting: {
      label: string;
      color: string;
      id: number;
    };
    BoardSetting: {
      theme: components['schemas']['BoardThemeSetting'];
      labels: components['schemas']['BoardLabelSetting'][];
    };
    BoardSettingEntity: {
      data: components['schemas']['BoardSetting'];
    };
    Function: Record<string, never>;
    CardMemberEntity: {
      id: number;
      user: components['schemas']['UserEntity'];
    };
    CardEntity: {
      card_id: number;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      title: string;
      /** @example awesome-task */
      slug: string;
      column: string;
      board: string;
      position: number;
      content: components['schemas']['Function'];
      cover: string | null;
      files: number;
      comments: number;
      members: components['schemas']['CardMemberEntity'][];
      labels: number[];
    };
    ColumnEntity: {
      id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      /** @example TODO */
      title: string;
      board: string;
      position: number;
      cards: components['schemas']['CardEntity'][];
    };
    BoardMemberEntity: {
      id: number;
      user: components['schemas']['UserEntity'];
      permission: ('owner' | 'member' | 'commenter' | 'reader')[];
    };
    BoardEntity: {
      /** @example fxrJQl4u */
      id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      /** @example My Board */
      title: string;
      description: string;
      /** @example 1 */
      owner: number;
      /** @example my-board */
      slug: string;
      settings: components['schemas']['BoardSettingEntity'];
      columns: components['schemas']['ColumnEntity'][];
      members: components['schemas']['BoardMemberEntity'][];
    };
    UserGroupEntity: {
      title: string;
      user: components['schemas']['UserEntity'];
      boards: components['schemas']['BoardEntity'][];
      system: boolean | null;
    };
    InviteMemberDTO: {
      board_id: string;
      user_id: number;
      permission: string;
    };
    ExcludeMemberDTO: {
      board_id: string;
      user_id: number;
    };
    UpdateLabelDTO: {
      board_id: string;
      label_id: number;
      label: string;
    };
    CreateColumnDTO: {
      board_id: string;
      title: string;
    };
    UpdateColumnDTO: {
      title: string;
      board_id: string;
      column_id: string;
    };
    MoveColumnDTO: {
      board_id: string;
      column: string;
      position: number;
    };
    DeleteColumnDTO: {
      board_id: string;
      column_id: string;
    };
    CreateCardDTO: {
      board_id: string;
      column_id: string;
      title: string;
    };
    MoveCardDTO: {
      board_id: string;
      target_column: string;
      card_id: number;
      position: number;
    };
    EditorJSData: {
      version: string;
      time: number;
      blocks: string[];
    };
    UpdateContentCardDTO: {
      board_id: string;
      card_id: number;
      content: components['schemas']['EditorJSData'];
    };
    UpdateCoverCardDTO: {
      board_id: string;
      card_id: number;
      cover_url: string;
    };
    UpdateCardDTO: {
      board_id: string;
      card_id: number;
      title: string;
    };
    SetCardMemberDTO: {
      board_id: string;
      user_id: number;
      card_id: number;
    };
    SetCardLabelDTO: {
      board_id: string;
      label_id: number;
      card_id: number;
    };
    CreateCommentDTO: {
      board_id: string;
      card_id: number;
      comment: string;
    };
    CommentEntity: {
      id: number;
      createdAt: string;
      updatedAt: string;
      author: components['schemas']['UserEntity'];
      comment: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  AuthController_authVk: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  AuthController_authGoogle: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  AuthController_logout: {
    responses: {
      201: {
        content: never;
      };
    };
  };
  UserController_getSelf: {
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['UserEntity'];
        };
      };
    };
  };
  UserController_searchUser: {
    parameters: {
      query: {
        username: string;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['UserEntity'][];
        };
      };
    };
  };
  UtilsController_getOAuthList: {
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['AuthMethodsDTO'];
        };
      };
    };
  };
  UtilsController_fetchUrl: {
    parameters: {
      query: {
        url: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  UtilsController_uploadImage: {
    responses: {
      201: {
        content: never;
      };
    };
  };
  UtilsController_uploadFile: {
    responses: {
      201: {
        content: never;
      };
    };
  };
  BoardController_createBoard: {
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateBoardDTO'];
      };
    };
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['BoardEntity'];
        };
      };
    };
  };
  BoardController_getUserList: {
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['UserGroupEntity'][];
        };
      };
    };
  };
  BoardController_getBoardById: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['BoardEntity'];
        };
      };
    };
  };
  BoardController_deleteBoard: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['BoardEntity'];
        };
      };
    };
  };
  BoardController_toggleFavorite: {
    parameters: {
      query: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['UserGroupEntity'];
        };
      };
    };
  };
  BoardController_inviteMember: {
    requestBody: {
      content: {
        'application/json': components['schemas']['InviteMemberDTO'];
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['BoardMemberEntity'];
        };
      };
    };
  };
  BoardController_excludeMember: {
    requestBody: {
      content: {
        'application/json': components['schemas']['ExcludeMemberDTO'];
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['BoardMemberEntity'];
        };
      };
    };
  };
  BoardController_updateLabel: {
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateLabelDTO'];
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['BoardEntity'];
        };
      };
    };
  };
  ColumnController_newColumn: {
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateColumnDTO'];
      };
    };
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['ColumnEntity'];
        };
      };
    };
  };
  ColumnController_deleteColumn: {
    requestBody: {
      content: {
        'application/json': components['schemas']['DeleteColumnDTO'];
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['ColumnEntity'];
        };
      };
    };
  };
  ColumnController_updateColumn: {
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateColumnDTO'];
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['ColumnEntity'];
        };
      };
    };
  };
  ColumnController_moveColumn: {
    requestBody: {
      content: {
        'application/json': components['schemas']['MoveColumnDTO'];
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['ColumnEntity'];
        };
      };
    };
  };
  CardController_create: {
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateCardDTO'];
      };
    };
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['CardEntity'];
        };
      };
    };
  };
  CardController_getCards: {
    parameters: {
      query: {
        board_id: string;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['CardEntity'][];
        };
      };
    };
  };
  CardController_getCard: {
    parameters: {
      query: {
        board_id: string;
        card_id: number;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['CardEntity'];
        };
      };
    };
  };
  CardController_setContent: {
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateContentCardDTO'];
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['CardEntity'];
        };
      };
    };
  };
  CardController_deleteCard: {
    parameters: {
      query: {
        board_id: string;
        card_id: number;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['CardEntity'];
        };
      };
    };
  };
  CardController_setTitle: {
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateCardDTO'];
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['CardEntity'];
        };
      };
    };
  };
  CardController_moveCard: {
    requestBody: {
      content: {
        'application/json': components['schemas']['MoveCardDTO'];
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['CardEntity'];
        };
      };
    };
  };
  CardController_setCover: {
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateCoverCardDTO'];
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['CardEntity'];
        };
      };
    };
  };
  CardController_setMember: {
    requestBody: {
      content: {
        'application/json': components['schemas']['SetCardMemberDTO'];
      };
    };
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['CardMemberEntity'];
        };
      };
    };
  };
  CardController_setLabel: {
    requestBody: {
      content: {
        'application/json': components['schemas']['SetCardLabelDTO'];
      };
    };
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['CardEntity'];
        };
      };
    };
  };
  CommentController_getCards: {
    parameters: {
      query: {
        board_id: string;
        card_id: number;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['CommentEntity'][];
        };
      };
    };
  };
  CommentController_createCard: {
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateCommentDTO'];
      };
    };
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['CommentEntity'];
        };
      };
    };
  };
}
